{"version":3,"sources":["components/BserMap/BserMap.jsx","components/BserMap/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["zoneColors","StyledSvg","styled","svg","StyledText","text","zone","BserMap","maxScale","minScale","xmlns","xmlnsXlink","viewBox","id","width","height","xlinkHref","process","Boxes","map","box","transform","coords","quantity","Background","div","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"m54BAKMA,EAAa,CACf,EAAG,iBACH,EAAG,oBACH,EAAG,qBACH,EAAG,sBACH,EAAG,sBACH,EAAG,uBAGDC,EAAYC,IAAOC,IAAV,+EAKTC,EAAaF,IAAOG,KAAV,sMACJ,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAWM,MAoCtBC,I,ECvDAA,ED0Bf,WACI,OACI,cAAC,oBAAD,CAAmBC,SAAU,GAAIC,SAAU,GAA3C,SACI,eAACR,EAAD,CACIS,MAAM,6BACNC,WAAW,+BACXC,QAAQ,cAHZ,UAKI,gDACA,mBAAGC,GAAG,UAAU,YAAU,UAA1B,SACI,uBACIC,MAAM,MACNC,OAAO,MACPC,UAAWC,uBAGlBC,EAAMC,KAAI,SAACC,GAAD,OACP,cAAChB,EAAD,CACIiB,UAAS,oBAAeD,EAAIE,OAAO,GAA1B,YAAgCF,EAAIE,OAAO,GAA3C,MACThB,KAAMc,EAAId,KAFd,SAIKc,EAAIG,oBE7CvBC,EAAatB,IAAOuB,IAAV,sEAYDC,MARf,WACI,OACI,cAACF,EAAD,UACI,cAAC,EAAD,OCEGG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9a0f31a2.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { MapInteractionCSS } from \"react-map-interaction\";\nimport Boxes from \"../../data/boxes.json\";\nimport Areas from \"../../data/areas.json\";\n\nconst zoneColors = {\n    0: \"hsl(0,0%, 75%)\",\n    1: \"hsl(0, 100%, 50%)\",\n    2: \"hsl(55, 100%, 50%)\",\n    3: \"hsl(120, 100%, 50%)\",\n    4: \"hsl(200, 100%, 50%)\",\n    5: \"hsl(304, 100%, 50%)\",\n};\n\nconst StyledSvg = styled.svg`\n    width: 100vw;\n    height: calc(100vh - 4px);\n`;\n\nconst StyledText = styled.text`\n    fill: ${({ zone }) => zoneColors[zone]};\n    font-size: 10px;\n    font-family: Trebuchet MS, Lucida Grande, Lucida Sans Unicode, Lucida Sans,\n        Tahoma, sans-serif;\n    cursor: pointer;\n`;\n\nfunction BserMap() {\n    return (\n        <MapInteractionCSS maxScale={10} minScale={0.8}>\n            <StyledSvg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                viewBox=\"0 0 772 887\"\n            >\n                <title>ZoneMapping</title>\n                <g id=\"Layer_1\" data-name=\"Layer 1\">\n                    <image\n                        width=\"772\"\n                        height=\"887\"\n                        xlinkHref={process.env.PUBLIC_URL + \"/MiniMap_01.png\"}\n                    />\n                </g>\n                {Boxes.map((box) => (\n                    <StyledText\n                        transform={`translate(${box.coords[0]} ${box.coords[1]} )`}\n                        zone={box.zone}\n                    >\n                        {box.quantity}\n                    </StyledText>\n                ))}\n            </StyledSvg>\n        </MapInteractionCSS>\n    );\n}\n\nexport default BserMap;\n","import BserMap from \"./BserMap\";\nexport default BserMap;\n","import BserMap from \"./components/BserMap\";\nimport styled from \"styled-components\";\n\nconst Background = styled.div`\n    background-color: hsl(0, 0%, 17.5%);\n`;\n\nfunction App() {\n    return (\n        <Background>\n            <BserMap />\n        </Background>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}